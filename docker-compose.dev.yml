# Docker Compose configuration for innkt platform development
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: innkt-postgres-dev
    environment:
      POSTGRES_DB: innkt_officer_dev
      POSTGRES_USER: innkt_user
      POSTGRES_PASSWORD: innkt_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./Backend/innkt.Officer/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - innkt-dev-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: innkt-mongodb-dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: innkt_user
      MONGO_INITDB_ROOT_PASSWORD: innkt_password
      MONGO_INITDB_DATABASE: innkt_messaging_dev
    volumes:
      - mongodb_dev_data:/data/db
      - ./Backend/innkt.Messaging/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    ports:
      - "27017:27017"
    networks:
      - innkt-dev-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: innkt-redis-dev
    command: redis-server --appendonly yes --requirepass innkt_redis_password
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - innkt-dev-network

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: innkt-zookeeper-dev
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - innkt-dev-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: innkt-kafka-dev
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_dev_data:/var/lib/kafka/data
    networks:
      - innkt-dev-network

  # Kafka UI for development
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: innkt-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - innkt-dev-network

  # Redis Commander for development
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: innkt-redis-commander
    depends_on:
      - redis
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:innkt_redis_password
    networks:
      - innkt-dev-network

  # MongoDB Express for development
  mongo-express:
    image: mongo-express:latest
    container_name: innkt-mongo-express
    depends_on:
      - mongodb
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: innkt_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: innkt_password
      ME_CONFIG_MONGODB_URL: mongodb://innkt_user:innkt_password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - innkt-dev-network

volumes:
  postgres_dev_data:
  mongodb_dev_data:
  redis_dev_data:
  kafka_dev_data:

networks:
  innkt-dev-network:
    driver: bridge
