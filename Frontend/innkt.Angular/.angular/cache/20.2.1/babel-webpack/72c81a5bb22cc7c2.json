{"ast":null,"code":"import { signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\nimport { FooterComponent } from './components/shared/footer/footer.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"./services/language.service\";\nimport * as i3 from \"./services/theme.service\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class AppComponent {\n    constructor(translate, languageService, themeService) {\n      this.translate = translate;\n      this.languageService = languageService;\n      this.themeService = themeService;\n      this.title = signal('Innkt', ...(ngDevMode ? [{\n        debugName: \"title\"\n      }] : []));\n      this.currentLanguage = 'en';\n      this.currentTheme = 'light';\n      // Set default language\n      this.translate.setDefaultLang('en');\n      this.translate.use('en');\n    }\n    ngOnInit() {\n      // Initialize language and theme from services\n      this.languageService.currentLanguage$.subscribe(lang => {\n        this.currentLanguage = lang;\n        this.translate.use(lang);\n        this.updateDocumentDirection(lang);\n      });\n      this.themeService.currentTheme$.subscribe(theme => {\n        this.currentTheme = theme;\n        this.updateDocumentTheme(theme);\n      });\n    }\n    updateDocumentDirection(language) {\n      const isRTL = language === 'he' || language === 'ar';\n      document.documentElement.dir = isRTL ? 'rtl' : 'ltr';\n      document.documentElement.lang = language;\n    }\n    updateDocumentTheme(theme) {\n      document.documentElement.setAttribute('data-theme', theme);\n      document.body.className = `theme-${theme}`;\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function AppComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.LanguageService), i0.ɵɵdirectiveInject(i3.ThemeService));\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 5,\n      vars: 1,\n      consts: [[1, \"app-container\", 3, \"dir\"], [1, \"main-content\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-navbar\");\n          i0.ɵɵelementStart(2, \"main\", 1);\n          i0.ɵɵelement(3, \"router-outlet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"app-footer\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"dir\", ctx.currentLanguage === \"he\" ? \"rtl\" : \"ltr\");\n        }\n      },\n      dependencies: [RouterOutlet, CommonModule, TranslateModule, NavbarComponent, FooterComponent],\n      styles: [\".app-container[_ngcontent-%COMP%]{min-height:100vh;display:flex;flex-direction:column;background-color:var(--background-color);transition:background-color var(--transition-normal)}.main-content[_ngcontent-%COMP%]{flex:1;padding:var(--spacing-lg) 0;min-height:calc(100vh - 120px)}[dir=rtl][_ngcontent-%COMP%]   .main-content[_ngcontent-%COMP%]{text-align:right}.theme-light[_ngcontent-%COMP%], .theme-dark[_ngcontent-%COMP%]{background-color:var(--background-color);color:var(--text-primary)}.loading[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:200px}.loading[_ngcontent-%COMP%]   .spinner[_ngcontent-%COMP%]{width:40px;height:40px;border:4px solid var(--surface-color);border-top:4px solid var(--primary-color);border-radius:50%;animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.error-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:200px;text-align:center;color:var(--error-color)}.error-container[_ngcontent-%COMP%]   .error-icon[_ngcontent-%COMP%]{font-size:var(--font-size-xxl);margin-bottom:var(--spacing-md)}.error-container[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{font-size:var(--font-size-lg);margin-bottom:var(--spacing-md)}.error-container[_ngcontent-%COMP%]   .error-actions[_ngcontent-%COMP%]{display:flex;gap:var(--spacing-sm)}@media (max-width: 480px){.error-container[_ngcontent-%COMP%]   .error-actions[_ngcontent-%COMP%]{flex-direction:column;width:100%}}\"]\n    }));\n  }\n  _staticBlock();\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}