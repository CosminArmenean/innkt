services:
  # MongoDB for Social Service (Posts, Feeds) - Replica Set for Change Streams
  mongodb-social:
    image: mongo:7
    container_name: mongodb-social
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27018:27017"
    volumes:
      - mongodb-social-data:/data/db
    networks:
      - innkt-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  # MongoDB for Messaging Service (Chat, Messages) - Standalone
  mongodb-messaging-standalone:
    image: mongo:7
    container_name: mongodb-messaging-standalone
    command: mongod --bind_ip_all
    ports:
      - "27017:27017"
    volumes:
      - mongodb-messaging-data:/data/db
    networks:
      - innkt-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Replica set initialization for Social MongoDB only
  mongodb-social-replica-init:
    image: mongo:7
    depends_on:
      mongodb-social:
        condition: service_healthy
    networks:
      - innkt-network
    command: >
      sh -c "
      echo '🔧 Initializing replica set rs0 for Social MongoDB...';
      sleep 10;
      mongosh --host mongodb-social:27017 --eval \"
      try {
        let status = rs.status();
        print('✅ Replica set already initialized');
        print('  - Primary: ' + status.members[0].name + ' (' + status.members[0].stateStr + ')');
      } catch (e) {
        if (e.message.includes('no replset config')) {
          print('🚀 Initializing single-member replica set...');
          rs.initiate({
            _id: 'rs0',
            members: [
              { _id: 0, host: 'mongodb-social:27017', priority: 1 }
            ]
          });
          print('⏳ Waiting for replica set to stabilize...');
          sleep(5000);
          
          let finalStatus = rs.status();
          print('✅ Replica set initialized successfully');
          print('  - Primary: ' + finalStatus.members[0].name + ' (' + finalStatus.members[0].stateStr + ')');
        } else {
          print('❌ Error: ' + e.message);
        }
      }
      \"
      "
    restart: "no"

volumes:
  mongodb-social-data:
  mongodb-messaging-data:

networks:
  innkt-network:
    driver: bridge
