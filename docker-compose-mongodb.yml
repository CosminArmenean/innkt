services:
  # MongoDB for Social Service (Posts, Feeds) - Primary member
  mongodb-social:
    image: mongo:7
    container_name: mongodb-social
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27018:27017"
    volumes:
      - mongodb-social-data:/data/db
    networks:
      - innkt-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  # MongoDB for Messaging Service (Chat, Messages) - Secondary member
  mongodb-messaging:
    image: mongo:7
    container_name: mongodb-messaging
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27017:27017"
    volumes:
      - mongodb-messaging-data:/data/db
    networks:
      - innkt-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Combined replica set initialization - Both instances in same rs0
  mongodb-replica-init:
    image: mongo:7
    depends_on:
      mongodb-social:
        condition: service_healthy
      mongodb-messaging:
        condition: service_healthy
    networks:
      - innkt-network
    command: >
      sh -c "
      echo 'üîß Initializing combined replica set rs0 with both MongoDB instances...';
      sleep 15;
      mongosh --host mongodb-social:27017 --eval \"
      try {
        let status = rs.status();
        print('‚úÖ Replica set already initialized with ' + status.members.length + ' members');
        status.members.forEach(m => print('  - ' + m.name + ': ' + m.stateStr));
      } catch (e) {
        if (e.message.includes('no replset config')) {
          print('üöÄ Initializing combined replica set with both instances...');
          rs.initiate({
            _id: 'rs0',
            members: [
              { _id: 0, host: 'mongodb-social:27017', priority: 2 },
              { _id: 1, host: 'mongodb-messaging:27017', priority: 1 }
            ]
          });
          print('‚è≥ Waiting for replica set to stabilize...');
          sleep(10000);
          
          let finalStatus = rs.status();
          print('‚úÖ Combined replica set initialized with ' + finalStatus.members.length + ' members:');
          finalStatus.members.forEach(m => {
            print('  - ' + m.name + ': ' + m.stateStr + ' (health: ' + m.health + ')');
          });
        } else {
          print('‚ùå Error: ' + e.message);
        }
      }
      \"
      "
    restart: "no"

volumes:
  mongodb-social-data:
  mongodb-messaging-data:

networks:
  innkt-network:
    driver: bridge
