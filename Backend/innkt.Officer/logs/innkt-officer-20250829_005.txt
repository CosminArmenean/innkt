2025-08-29 20:47:27.439 +03:00 [INF] Starting Duende IdentityServer version 7.0.0+2f7360ca39ed849ea5ca7c501edf404be7286722 (.NET 9.0.8)
2025-08-29 20:47:28.004 +03:00 [WRN] You do not have a valid license key for the Duende software. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please start a conversation with us: https://duendesoftware.com/contact
2025-08-29 20:47:28.008 +03:00 [WRN] You have automatic key management enabled, but you do not have a license. This feature requires the Business or Enterprise Edition tier of license. Alternatively you can disable automatic key management by setting the KeyManagement.Enabled property to false on the IdentityServerOptions.
2025-08-29 20:47:28.390 +03:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2025-08-29 20:47:30.757 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-29 20:47:31.117 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-08-29 20:47:31.147 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-29 20:47:31.155 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-08-29 20:47:31.165 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-29 20:47:31.191 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-08-29 20:47:31.475 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-29 20:47:31.801 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-08-29 20:47:31.806 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-29 20:47:31.808 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-08-29 20:47:31.815 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-29 20:47:31.820 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-08-29 20:47:31.864 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-29 20:47:31.935 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-08-29 20:47:31.939 +03:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-29 20:47:31.942 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-08-29 20:47:31.947 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-29 20:47:31.951 +03:00 [INF] No migrations were applied. The database is already up to date.
2025-08-29 20:47:31.954 +03:00 [INF] Current language set to 'en'
2025-08-29 20:47:31.965 +03:00 [INF] String 'auth.login.success' updated for language 'en'
2025-08-29 20:47:31.969 +03:00 [INF] String 'auth.login.failed' updated for language 'en'
2025-08-29 20:47:31.973 +03:00 [INF] String 'auth.login.invalid_credentials' updated for language 'en'
2025-08-29 20:47:31.977 +03:00 [INF] String 'auth.login.account_locked' updated for language 'en'
2025-08-29 20:47:31.979 +03:00 [INF] String 'auth.login.account_inactive' updated for language 'en'
2025-08-29 20:47:31.982 +03:00 [INF] String 'auth.logout.success' updated for language 'en'
2025-08-29 20:47:31.985 +03:00 [INF] String 'auth.registration.success' updated for language 'en'
2025-08-29 20:47:31.987 +03:00 [INF] String 'auth.registration.failed' updated for language 'en'
2025-08-29 20:47:31.989 +03:00 [INF] String 'auth.registration.email_exists' updated for language 'en'
2025-08-29 20:47:31.991 +03:00 [INF] String 'auth.registration.username_exists' updated for language 'en'
2025-08-29 20:47:31.994 +03:00 [INF] String 'mfa.setup.required' updated for language 'en'
2025-08-29 20:47:31.997 +03:00 [INF] String 'mfa.setup.success' updated for language 'en'
2025-08-29 20:47:32.000 +03:00 [INF] String 'mfa.setup.failed' updated for language 'en'
2025-08-29 20:47:32.001 +03:00 [INF] String 'mfa.enable.success' updated for language 'en'
2025-08-29 20:47:32.003 +03:00 [INF] String 'mfa.enable.failed' updated for language 'en'
2025-08-29 20:47:32.006 +03:00 [INF] String 'mfa.verification.required' updated for language 'en'
2025-08-29 20:47:32.009 +03:00 [INF] String 'mfa.verification.success' updated for language 'en'
2025-08-29 20:47:32.013 +03:00 [INF] String 'mfa.verification.failed' updated for language 'en'
2025-08-29 20:47:32.016 +03:00 [INF] String 'verification.credit_card.required' updated for language 'en'
2025-08-29 20:47:32.019 +03:00 [INF] String 'verification.credit_card.success' updated for language 'en'
2025-08-29 20:47:32.022 +03:00 [INF] String 'verification.driver_license.required' updated for language 'en'
2025-08-29 20:47:32.025 +03:00 [INF] String 'verification.driver_license.success' updated for language 'en'
2025-08-29 20:47:32.030 +03:00 [INF] String 'kid_account.creation.success' updated for language 'en'
2025-08-29 20:47:32.033 +03:00 [INF] String 'kid_account.pairing.success' updated for language 'en'
2025-08-29 20:47:32.035 +03:00 [INF] String 'kid_account.independence.activated' updated for language 'en'
2025-08-29 20:47:32.037 +03:00 [INF] String 'general.success' updated for language 'en'
2025-08-29 20:47:32.039 +03:00 [INF] String 'general.error' updated for language 'en'
2025-08-29 20:47:32.043 +03:00 [INF] String 'general.warning' updated for language 'en'
2025-08-29 20:47:32.045 +03:00 [INF] String 'general.info' updated for language 'en'
2025-08-29 20:47:32.048 +03:00 [INF] String 'validation.required' updated for language 'en'
2025-08-29 20:47:32.050 +03:00 [INF] String 'validation.invalid_email' updated for language 'en'
2025-08-29 20:47:32.052 +03:00 [INF] String 'validation.too_long' updated for language 'en'
2025-08-29 20:47:32.054 +03:00 [INF] String 'validation.too_short' updated for language 'en'
2025-08-29 20:47:32.059 +03:00 [INF] String 'auth.login.success' updated for language 'es'
2025-08-29 20:47:32.062 +03:00 [INF] String 'auth.login.failed' updated for language 'es'
2025-08-29 20:47:32.065 +03:00 [INF] String 'auth.login.invalid_credentials' updated for language 'es'
2025-08-29 20:47:32.067 +03:00 [INF] String 'auth.logout.success' updated for language 'es'
2025-08-29 20:47:32.069 +03:00 [INF] String 'auth.registration.success' updated for language 'es'
2025-08-29 20:47:32.072 +03:00 [INF] String 'mfa.setup.required' updated for language 'es'
2025-08-29 20:47:32.076 +03:00 [INF] String 'mfa.setup.success' updated for language 'es'
2025-08-29 20:47:32.079 +03:00 [INF] String 'general.success' updated for language 'es'
2025-08-29 20:47:32.082 +03:00 [INF] String 'general.error' updated for language 'es'
2025-08-29 20:47:32.084 +03:00 [INF] String 'validation.required' updated for language 'es'
2025-08-29 20:47:32.086 +03:00 [INF] String 'validation.invalid_email' updated for language 'es'
2025-08-29 20:47:32.089 +03:00 [INF] String 'auth.login.success' updated for language 'fr'
2025-08-29 20:47:32.093 +03:00 [INF] String 'auth.login.failed' updated for language 'fr'
2025-08-29 20:47:32.096 +03:00 [INF] String 'auth.login.invalid_credentials' updated for language 'fr'
2025-08-29 20:47:32.099 +03:00 [INF] String 'general.success' updated for language 'fr'
2025-08-29 20:47:32.101 +03:00 [INF] String 'general.error' updated for language 'fr'
2025-08-29 20:47:32.103 +03:00 [INF] String 'validation.required' updated for language 'fr'
2025-08-29 20:47:32.104 +03:00 [INF] String 'validation.invalid_email' updated for language 'fr'
2025-08-29 20:47:32.108 +03:00 [INF] String 'auth.login.success' updated for language 'de'
2025-08-29 20:47:32.111 +03:00 [INF] String 'auth.login.failed' updated for language 'de'
2025-08-29 20:47:32.114 +03:00 [INF] String 'auth.login.invalid_credentials' updated for language 'de'
2025-08-29 20:47:32.116 +03:00 [INF] String 'general.success' updated for language 'de'
2025-08-29 20:47:32.118 +03:00 [INF] String 'general.error' updated for language 'de'
2025-08-29 20:47:32.120 +03:00 [INF] String 'validation.required' updated for language 'de'
2025-08-29 20:47:32.123 +03:00 [INF] String 'validation.invalid_email' updated for language 'de'
2025-08-29 20:47:32.128 +03:00 [INF] String 'auth.login.success' updated for language 'ro'
2025-08-29 20:47:32.131 +03:00 [INF] String 'auth.login.failed' updated for language 'ro'
2025-08-29 20:47:32.133 +03:00 [INF] String 'auth.login.invalid_credentials' updated for language 'ro'
2025-08-29 20:47:32.135 +03:00 [INF] String 'general.success' updated for language 'ro'
2025-08-29 20:47:32.137 +03:00 [INF] String 'general.error' updated for language 'ro'
2025-08-29 20:47:32.139 +03:00 [INF] String 'validation.required' updated for language 'ro'
2025-08-29 20:47:32.142 +03:00 [INF] String 'validation.invalid_email' updated for language 'ro'
2025-08-29 20:47:32.146 +03:00 [INF] Database seeded successfully
2025-08-29 20:47:32.190 +03:00 [INF] User profile is available. Using 'C:\Users\cosmi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-29 20:47:32.285 +03:00 [WRN] The WebRootPath was not found: C:\Users\cosmi\source\repos\innkt\Backend\innkt.Officer\wwwroot. Static files may be unavailable.
2025-08-29 20:47:32.333 +03:00 [WRN] Overriding address(es) 'http://localhost:5002, https://localhost:5003'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-08-29 20:47:32.350 +03:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://127.0.0.1:5002: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, Boolean disconnectOnFailure, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.EndpointsStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__14_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
