2025-08-29 16:26:51.201 +03:00 [WRN] You do not have a valid license key for the Duende software. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please start a conversation with us: https://duendesoftware.com/contact
2025-08-29 16:26:51.250 +03:00 [WRN] You have automatic key management enabled, but you do not have a license. This feature requires the Business or Enterprise Edition tier of license. Alternatively you can disable automatic key management by setting the KeyManagement.Enabled property to false on the IdentityServerOptions.
2025-08-29 16:26:52.654 +03:00 [WRN] The WebRootPath was not found: C:\Users\cosmi\source\repos\innkt\Backend\innkt.Officer\wwwroot. Static files may be unavailable.
2025-08-29 16:26:52.688 +03:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://127.0.0.1:5000: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, Boolean disconnectOnFailure, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.EndpointsStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__14_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-08-29 16:38:35.642 +03:00 [INF] Starting INNKT Officer Service... {}
2025-08-29 16:38:35.688 +03:00 [INF] Environment: Production {}
2025-08-29 16:38:35.693 +03:00 [INF] Application Name: innkt.Officer {}
2025-08-29 16:38:35.694 +03:00 [INF] Configuring HTTP request pipeline... {}
2025-08-29 16:38:35.713 +03:00 [WRN] You do not have a valid license key for the Duende software. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please start a conversation with us: https://duendesoftware.com/contact {"SourceContext":"Duende.IdentityServer.License"}
2025-08-29 16:38:35.719 +03:00 [WRN] You have automatic key management enabled, but you do not have a license. This feature requires the Business or Enterprise Edition tier of license. Alternatively you can disable automatic key management by setting the KeyManagement.Enabled property to false on the IdentityServerOptions. {"SourceContext":"Duende.IdentityServer.License"}
2025-08-29 16:38:36.071 +03:00 [INF] Application startup completed successfully {}
2025-08-29 16:38:36.073 +03:00 [INF] Health check endpoints available at: /health, /health/ready, /health/live {}
2025-08-29 16:38:37.006 +03:00 [WRN] The WebRootPath was not found: C:\Users\cosmi\source\repos\innkt\Backend\innkt.Officer\wwwroot. Static files may be unavailable. {"EventId":{"Id":16,"Name":"WebRootPathNotFound"},"SourceContext":"Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware"}
2025-08-29 16:41:24.047 +03:00 [INF] Starting INNKT Officer Service... {}
2025-08-29 16:41:24.097 +03:00 [INF] Environment: Production {}
2025-08-29 16:41:24.101 +03:00 [INF] Application Name: innkt.Officer {}
2025-08-29 16:41:24.103 +03:00 [INF] Configuring HTTP request pipeline... {}
2025-08-29 16:41:24.124 +03:00 [WRN] You do not have a valid license key for the Duende software. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please start a conversation with us: https://duendesoftware.com/contact {"SourceContext":"Duende.IdentityServer.License"}
2025-08-29 16:41:24.132 +03:00 [WRN] You have automatic key management enabled, but you do not have a license. This feature requires the Business or Enterprise Edition tier of license. Alternatively you can disable automatic key management by setting the KeyManagement.Enabled property to false on the IdentityServerOptions. {"SourceContext":"Duende.IdentityServer.License"}
2025-08-29 16:41:24.504 +03:00 [INF] Application startup completed successfully {}
2025-08-29 16:41:24.506 +03:00 [INF] Health check endpoints available at: /health, /health/ready, /health/live {}
2025-08-29 16:41:25.437 +03:00 [WRN] The WebRootPath was not found: C:\Users\cosmi\source\repos\innkt\Backend\innkt.Officer\wwwroot. Static files may be unavailable. {"EventId":{"Id":16,"Name":"WebRootPathNotFound"},"SourceContext":"Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware"}
2025-08-29 16:56:19.228 +03:00 [INF] Starting INNKT Officer Service... {}
2025-08-29 16:56:19.275 +03:00 [INF] Environment: Production {}
2025-08-29 16:56:19.280 +03:00 [INF] Application Name: innkt.Officer {}
2025-08-29 16:56:19.282 +03:00 [INF] Configuring HTTP request pipeline... {}
2025-08-29 16:56:19.302 +03:00 [WRN] You do not have a valid license key for the Duende software. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please start a conversation with us: https://duendesoftware.com/contact {"SourceContext":"Duende.IdentityServer.License"}
2025-08-29 16:56:19.308 +03:00 [WRN] You have automatic key management enabled, but you do not have a license. This feature requires the Business or Enterprise Edition tier of license. Alternatively you can disable automatic key management by setting the KeyManagement.Enabled property to false on the IdentityServerOptions. {"SourceContext":"Duende.IdentityServer.License"}
2025-08-29 16:56:19.655 +03:00 [INF] Application startup completed successfully {}
2025-08-29 16:56:19.657 +03:00 [INF] Health check endpoints available at: /health, /health/ready, /health/live {}
2025-08-29 16:56:20.594 +03:00 [WRN] The WebRootPath was not found: C:\Users\cosmi\source\repos\innkt\Backend\innkt.Officer\wwwroot. Static files may be unavailable. {"EventId":{"Id":16,"Name":"WebRootPathNotFound"},"SourceContext":"Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware"}
2025-08-29 17:12:35.827 +03:00 [INF] Starting INNKT Officer Service... {}
2025-08-29 17:12:35.920 +03:00 [INF] Environment: Development {}
2025-08-29 17:12:35.944 +03:00 [INF] Application Name: innkt.Officer {}
2025-08-29 17:12:35.947 +03:00 [INF] Configured HTTP endpoint: http://localhost:5000 {}
2025-08-29 17:12:35.951 +03:00 [INF] Configured HTTPS endpoint: https://localhost:5001 {}
2025-08-29 17:12:35.957 +03:00 [INF] Explicitly configured URLs: http://localhost:5000, https://localhost:5001 {}
2025-08-29 17:12:35.960 +03:00 [INF] Configuring HTTP request pipeline... {}
2025-08-29 17:12:35.963 +03:00 [INF] Development environment detected - enabling Swagger {}
2025-08-29 17:12:35.992 +03:00 [INF] Configuring IdentityServer... {}
2025-08-29 17:12:36.146 +03:00 [WRN] You do not have a valid license key for the Duende software. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please start a conversation with us: https://duendesoftware.com/contact {"SourceContext":"Duende.IdentityServer.License"}
2025-08-29 17:12:36.200 +03:00 [WRN] You have automatic key management enabled, but you do not have a license. This feature requires the Business or Enterprise Edition tier of license. Alternatively you can disable automatic key management by setting the KeyManagement.Enabled property to false on the IdentityServerOptions. {"SourceContext":"Duende.IdentityServer.License"}
2025-08-29 17:12:37.109 +03:00 [INF] IdentityServer configured successfully {}
2025-08-29 17:12:37.279 +03:00 [INF] Application startup completed successfully {}
2025-08-29 17:12:37.282 +03:00 [INF] Health check endpoints available at: /health, /health/ready, /health/live {}
2025-08-29 17:12:38.850 +03:00 [WRN] The WebRootPath was not found: C:\Users\cosmi\source\repos\innkt\Backend\innkt.Officer\wwwroot. Static files may be unavailable. {"EventId":{"Id":16,"Name":"WebRootPathNotFound"},"SourceContext":"Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware"}
2025-08-29 17:12:38.941 +03:00 [WRN] Overriding address(es) 'http://localhost:5000, https://localhost:5001'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead. {"SourceContext":"Microsoft.AspNetCore.Server.Kestrel"}
2025-08-29 17:14:34.598 +03:00 [ERR] Health check redis-cache with status "Unhealthy" completed after 8483.6051ms with message 'null' {"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HNF70OE8PAUB:00000001","RequestPath":"/health","ConnectionId":"0HNF70OE8PAUB"}
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImplAsync(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 620
   at HealthChecks.Redis.RedisHealthCheck.TimeoutAsync(Task`1 task, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 124
   at HealthChecks.Redis.RedisHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 54
2025-08-29 17:15:00.678 +03:00 [ERR] Health check redis-cache with status "Unhealthy" completed after 12144.5158ms with message 'null' {"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HNF70OE8PAUB:00000002","RequestPath":"/health","ConnectionId":"0HNF70OE8PAUB"}
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImplAsync(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 620
   at HealthChecks.Redis.RedisHealthCheck.TimeoutAsync(Task`1 task, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 124
   at HealthChecks.Redis.RedisHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 54
2025-08-29 17:15:58.576 +03:00 [ERR] Health check redis-cache with status "Unhealthy" completed after 12246.3764ms with message 'null' {"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HNF70OE8PAUB:00000005","RequestPath":"/health/ready","ConnectionId":"0HNF70OE8PAUB"}
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImplAsync(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 620
   at HealthChecks.Redis.RedisHealthCheck.TimeoutAsync(Task`1 task, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 124
   at HealthChecks.Redis.RedisHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 54
2025-08-29 17:16:16.165 +03:00 [ERR] Health check redis-cache with status "Unhealthy" completed after 12189.9655ms with message 'null' {"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HNF70OE8PAUE:00000003","RequestPath":"/health/ready","ConnectionId":"0HNF70OE8PAUE"}
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImplAsync(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 620
   at HealthChecks.Redis.RedisHealthCheck.TimeoutAsync(Task`1 task, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 124
   at HealthChecks.Redis.RedisHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 54
2025-08-29 17:17:41.895 +03:00 [ERR] Health check redis-cache with status "Unhealthy" completed after 8175.6277ms with message 'null' {"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","RequestId":"0HNF70OE8PAUF:00000003","RequestPath":"/health/ready","ConnectionId":"0HNF70OE8PAUF"}
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImplAsync(ConfigurationOptions configuration, TextWriter writer, Nullable`1 serverType) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 620
   at HealthChecks.Redis.RedisHealthCheck.TimeoutAsync(Task`1 task, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 124
   at HealthChecks.Redis.RedisHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in /home/runner/work/AspNetCore.Diagnostics.HealthChecks/AspNetCore.Diagnostics.HealthChecks/src/HealthChecks.Redis/RedisHealthCheck.cs:line 54
